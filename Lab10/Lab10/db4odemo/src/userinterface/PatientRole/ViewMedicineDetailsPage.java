/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.PatientRole;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Medicine.Medicine;
import Business.Medicine.MedicineDirectory;
import Business.Network.Network;
import Business.Order.Order;
import Business.Order.OrderDirectory;
import Business.Organization.Organization;
import Business.Organization.PharmacistOrganization;
import Business.Pharmacy.Pharmacy;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.CustomerWorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.HashSet;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mantr
 */
public class ViewMedicineDetailsPage extends javax.swing.JPanel {

    /**
     * Creates new form ViewMedicineDetailsJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem system;
    private HashSet<Medicine> med ;
    private HashSet<Medicine> medlist;
    private OrderDirectory orderD;
    private ArrayList<Order> o = new ArrayList<>();
    private UserAccount user;
  public ViewMedicineDetailsPage(JPanel userProcessContainer, EcoSystem system,HashSet<Medicine> med,UserAccount user) {
    
        initComponents();
        this.userProcessContainer = userProcessContainer;
     this.system = system;
     this.med=med;
       populateCombobox();
        populateTable();
        this.user = user;
        orderD = new OrderDirectory();
    }
   public void populateCombobox()
   {
  for (Network network : system.getNetworkList()) {
            RegionCombo.addItem(network);
        }
   }
    public void populateTable()
    {
    
DefaultTableModel model = (DefaultTableModel) SaltTable.getModel();

       model.setRowCount(0);
       Object[] row = new Object[10];
                for(Medicine m : med)
                {
                    row[0]=m.getBrand();
           row[1] = m;
           row[2] = m.getSaltComposition1();
        
            row[3]= m.getSaltComposition2();
            row[4]=m.getSaltComposition3();
           row[5]=m.getPrice();
           row[6]=m.getType();
           row[7]=m.getDisease();
          
                      model.addRow(row);
                }
    }
  
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        AddToCartBtn = new javax.swing.JButton();
        BackBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        SaltTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        PharmacyTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        RegionCombo = new javax.swing.JComboBox();
        showPharmaBtn = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/PatientRole/blue.jpg"))); // NOI18N
        jLabel2.setText("Re");

        setLayout(null);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 51, 102));
        jLabel3.setText("Salt Composition");
        add(jLabel3);
        jLabel3.setBounds(20, 140, 205, 37);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 51, 102));
        jLabel8.setText("Available In");
        add(jLabel8);
        jLabel8.setBounds(20, 330, 118, 37);

        AddToCartBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        AddToCartBtn.setForeground(new java.awt.Color(0, 51, 102));
        AddToCartBtn.setText("Add to Cart");
        AddToCartBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddToCartBtnActionPerformed(evt);
            }
        });
        add(AddToCartBtn);
        AddToCartBtn.setBounds(330, 520, 150, 43);

        BackBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        BackBtn.setForeground(new java.awt.Color(0, 51, 102));
        BackBtn.setText("Back");
        BackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtnActionPerformed(evt);
            }
        });
        add(BackBtn);
        BackBtn.setBounds(110, 520, 109, 43);

        SaltTable.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        SaltTable.setForeground(new java.awt.Color(0, 51, 102));
        SaltTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Brand", "Medicine Name", "Salt Comp1", "Salt Comp2", "Salt Comp3", "Type", "Disease", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(SaltTable);
        if (SaltTable.getColumnModel().getColumnCount() > 0) {
            SaltTable.getColumnModel().getColumn(0).setResizable(false);
            SaltTable.getColumnModel().getColumn(1).setResizable(false);
            SaltTable.getColumnModel().getColumn(2).setResizable(false);
            SaltTable.getColumnModel().getColumn(3).setResizable(false);
            SaltTable.getColumnModel().getColumn(4).setResizable(false);
            SaltTable.getColumnModel().getColumn(5).setResizable(false);
            SaltTable.getColumnModel().getColumn(6).setResizable(false);
            SaltTable.getColumnModel().getColumn(7).setResizable(false);
        }

        add(jScrollPane1);
        jScrollPane1.setBounds(10, 190, 825, 137);

        PharmacyTable.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        PharmacyTable.setForeground(new java.awt.Color(0, 51, 102));
        PharmacyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pharmacy Name", "Location"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(PharmacyTable);

        add(jScrollPane2);
        jScrollPane2.setBounds(20, 390, 825, 110);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Region ");
        add(jLabel4);
        jLabel4.setBounds(20, 90, 100, 30);

        add(RegionCombo);
        RegionCombo.setBounds(160, 80, 110, 40);

        showPharmaBtn.setText("Show Pharmacies");
        showPharmaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showPharmaBtnActionPerformed(evt);
            }
        });
        add(showPharmaBtn);
        showPharmaBtn.setBounds(340, 340, 170, 29);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/PatientRole/blue.jpg"))); // NOI18N
        jLabel7.setText("jLabel7");
        add(jLabel7);
        jLabel7.setBounds(0, 0, 850, 620);
    }// </editor-fold>//GEN-END:initComponents

    private void AddToCartBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddToCartBtnActionPerformed
        // TODO add your handling code here:
        medlist = new HashSet<>();
        String brand="";
        String medname="";
        int qty=0;
        float price=0;
         int[] selectedrows = SaltTable.getSelectedRows();
        if (selectedrows.length != -1) {
          
            
            for (int i = 0; i < selectedrows.length; i++)
            {
                
               Medicine m= (Medicine) SaltTable.getValueAt(selectedrows[i], 1);
              medname=m.getSaltname();
               brand=m.getBrand();
               qty=m.getUnits();
               price=m.getPrice();
               
               Order order = orderD.AddOrder(medname, price, qty,brand);
               
                o.add(order);
                
            }
           
        } else {
             JOptionPane.showMessageDialog(null, "Please select a row");
        }
        
        
        String message = "Order Request";
        CustomerWorkRequest request = new CustomerWorkRequest();
        request.setOrderlist(o);
        
        request.setMessage(message);
        request.setSender(user);
        request.setStatus("Sent");
        request.setMessage(message);

        Enterprise ent = null;
        for (Network network : system.getNetworkList()) {
           //   RegionCombo.addItem(network);
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                Enterprise.EnterpriseType  type =enterprise.getEnterpriseType();
            if(type.equals(type.Pharmacy))
             ent=enterprise;
            break;
            }
        }
        Organization org = null;
        for (Organization organization : ent.getOrganizationDirectory().getOrganizationList()) {
            if (organization instanceof PharmacistOrganization) {
                org = organization;

                break;
            }
        }
        
        

        
        
        if (org != null) {

            org.getWorkQueue().getWorkRequestList().add(request);
            user.getWorkQueue().getWorkRequestList().add(request);

           // JOptionPane.showMessageDialog(null, "Add to cart!");
            
        }
        
        OrderDetailsJPanel orderDetail = new OrderDetailsJPanel(userProcessContainer,o,user,system);
        userProcessContainer.add("OrderDetailsPanel", orderDetail);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_AddToCartBtnActionPerformed

    private void BackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBtnActionPerformed
        // TODO add your handling code here:
         userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_BackBtnActionPerformed

    private void showPharmaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showPharmaBtnActionPerformed
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel) PharmacyTable.getModel();
        Network n = (Network) RegionCombo.getSelectedItem();
        
        
         model.setRowCount(0);
              Object[] row = new Object[10];
        for(Enterprise ent : n.getEnterpriseDirectory().getEnterpriseList()){
            if(ent.getEnterpriseType().equals(Enterprise.EnterpriseType.Pharmacy)){
                
               
                    row[0]=ent.getName();
                    row[1] = ent.getEntloc();
                      model.addRow(row);
                     }
                
            
        }
    }//GEN-LAST:event_showPharmaBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddToCartBtn;
    private javax.swing.JButton BackBtn;
    private javax.swing.JTable PharmacyTable;
    private javax.swing.JComboBox RegionCombo;
    private javax.swing.JTable SaltTable;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton showPharmaBtn;
    // End of variables declaration//GEN-END:variables
}
