package userinterface.SupplyManagerRole;
import userinterface.ManageMedicineInventory.AddToInventoryJPanel;
import userinterface.ManageMedicineInventory.ViewMedicineInventoryPage;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.Enterprise.EnterpriseType;
import Business.Medicine.Medicine;
import Business.Medicine.MedicineDirectory;
import Business.Network.Network;
import static Business.Organization.Organization.Type.SupplyManager;
import Business.Organization.SupplyManagerOrganization;
import Business.Supplier.Supplier;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.CustomerWorkRequest;
import Business.WorkQueue.MedicineSupplyWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.ManageMedicineInventory.RequestMedicineSupplyJPanel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Payal Zanwar
 */
public class SupplyManagerWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SupplyManagerWorkAreaJPanel
     */
    
    private JPanel userProcessContainer;
    private SupplyManagerOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private Supplier supp;
    private EcoSystem system;
    private MedicineDirectory med;
    public SupplyManagerWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, SupplyManagerOrganization organization, Enterprise enterprise,EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.system=system;
       //supp=new Supplier();
       suppliernametxt.setText(enterprise.getName());
       
       populateTable();
       
       
      
    }

    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel)workRequestJTable.getModel();
        
        model.setRowCount(0);
        
        for(WorkRequest request : organization.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[12];
            row[0] = ((MedicineSupplyWorkRequest) request);
            row[1] = ((MedicineSupplyWorkRequest) request).getBrand();
            row[2] = ((MedicineSupplyWorkRequest) request).getQuantity();
            row[3] = ((MedicineSupplyWorkRequest) request).getPrice();
            row[4] = ((MedicineSupplyWorkRequest) request).getSaltc1();
            row[5] = ((MedicineSupplyWorkRequest) request).getSaltc2();
            row[6] = ((MedicineSupplyWorkRequest) request).getSaltc3();
            row[7] = ((MedicineSupplyWorkRequest) request).getMedType();
            row[8] = ((MedicineSupplyWorkRequest) request).getDiseaseName();
            row[9] = request.getSender();
            row[10] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            if(request.getStatus().equalsIgnoreCase("sent"))
                request.setStatus("Awaiting Response");
            row[11] = request.getStatus();
                        
            model.addRow(row);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        container = new javax.swing.JPanel();
        refreshJButton = new javax.swing.JButton();
        assignJButton = new javax.swing.JButton();
        supplyBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        suppliernametxt = new javax.swing.JTextField();
        viewInventoryBtn = new javax.swing.JButton();
        reqSupplyFromManufacturerBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();

        setLayout(new java.awt.CardLayout());

        container.setLayout(null);

        refreshJButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        refreshJButton.setForeground(new java.awt.Color(0, 51, 102));
        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });
        container.add(refreshJButton);
        refreshJButton.setBounds(784, 170, 102, 32);

        assignJButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        assignJButton.setForeground(new java.awt.Color(0, 51, 102));
        assignJButton.setText("Assign to me");
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });
        container.add(assignJButton);
        assignJButton.setBounds(36, 370, 145, 58);

        supplyBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        supplyBtn.setForeground(new java.awt.Color(0, 51, 102));
        supplyBtn.setText("Supply");
        supplyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplyBtnActionPerformed(evt);
            }
        });
        container.add(supplyBtn);
        supplyBtn.setBounds(728, 370, 139, 58);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Supply Manager Work Area");
        container.add(jLabel1);
        jLabel1.setBounds(0, 0, 886, 60);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 51, 102));
        jLabel2.setText("Supplier ");
        container.add(jLabel2);
        jLabel2.setBounds(41, 124, 98, 33);

        suppliernametxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        suppliernametxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suppliernametxtActionPerformed(evt);
            }
        });
        container.add(suppliernametxt);
        suppliernametxt.setBounds(170, 122, 301, 37);

        viewInventoryBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        viewInventoryBtn.setForeground(new java.awt.Color(0, 51, 102));
        viewInventoryBtn.setText("View Inventory");
        viewInventoryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewInventoryBtnActionPerformed(evt);
            }
        });
        container.add(viewInventoryBtn);
        viewInventoryBtn.setBounds(234, 370, 160, 58);

        reqSupplyFromManufacturerBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        reqSupplyFromManufacturerBtn.setForeground(new java.awt.Color(0, 51, 102));
        reqSupplyFromManufacturerBtn.setText("Request Supply from Manufacturer");
        reqSupplyFromManufacturerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reqSupplyFromManufacturerBtnActionPerformed(evt);
            }
        });
        container.add(reqSupplyFromManufacturerBtn);
        reqSupplyFromManufacturerBtn.setBounds(454, 370, 275, 58);

        workRequestJTable.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        workRequestJTable.setForeground(new java.awt.Color(0, 51, 102));
        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicine Name", "Brand", "Quantity", "Price", "Salt 1", "Salt 2", "Type", "Salt 3", "Disease", "Sender", "Receiver", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        container.add(jScrollPane1);
        jScrollPane1.setBounds(10, 213, 876, 130);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/SupplyManagerRole/testtubes.jpg"))); // NOI18N
        container.add(jLabel3);
        jLabel3.setBounds(-6, -6, 910, 510);

        add(container, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        populateTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed

        int selectedRow = workRequestJTable.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(container, "Please select an order");
            return;
        }
        WorkRequest request = (WorkRequest)workRequestJTable.getValueAt(selectedRow, 0);
        if(request.getStatus().equalsIgnoreCase("completed"))
        JOptionPane.showMessageDialog(container, "The request has already been completed");
        else
        {request.setReceiver(userAccount);
            request.setStatus("Pending");
            populateTable();}
    }//GEN-LAST:event_assignJButtonActionPerformed

    private void supplyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplyBtnActionPerformed
        try {

            int selectedRow = workRequestJTable.getSelectedRow();
            if (selectedRow < 0){
                JOptionPane.showMessageDialog(container, "Please select an order");
                return;}
            MedicineSupplyWorkRequest request = (MedicineSupplyWorkRequest)workRequestJTable.getValueAt(selectedRow, 0);
            if(request.getReceiver()==null)
            JOptionPane.showMessageDialog(container,"The request is unassigned");
            else
            {
                System.out.println("supplier med list: "+med.getSupplierMedicineList().size());

                for (Medicine m : med.getSupplierMedicineList()) {

                    if (m.getBrand().equalsIgnoreCase(((MedicineSupplyWorkRequest) request).getBrand())
                        && m.getSaltComposition1().equalsIgnoreCase(((MedicineSupplyWorkRequest) request).getSaltc1())
                        && m.getSaltComposition2().equalsIgnoreCase(((MedicineSupplyWorkRequest) request).getSaltc2())
                        && m.getSaltComposition3().equalsIgnoreCase(((MedicineSupplyWorkRequest) request).getSaltc3())
                        && m.getSaltname().equalsIgnoreCase(((MedicineSupplyWorkRequest) request).getMedName())
                        && m.getDisease().equalsIgnoreCase(((MedicineSupplyWorkRequest) request).getDiseaseName())
                        && m.getType().equalsIgnoreCase(((MedicineSupplyWorkRequest) request).getMedType())) {
                        System.out.println("if me aaya");

                        if(m.getUnits() >= ((MedicineSupplyWorkRequest) request).getQuantity())
                        {
                            m.setUnits(m.getUnits()-((MedicineSupplyWorkRequest) request).getQuantity());
                            request.setStatus("Completed");
                            JOptionPane.showMessageDialog(this, "Units Updated In Inventory");
                            break;}
                        else

                        {JOptionPane.showMessageDialog(container,"Insufficient stock in the inventory");
                            break;}

                    }
                    //                                else{
                        //                                JOptionPane.showMessageDialog(this, "Out of Stock. Please request supply from manufacturer.");
                        //                                break;
                        //                                }
                }
                System.out.println("populate hoga table ab");
                populateTable();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(container, "Bhak! ye sab galat hai");
        }
    }//GEN-LAST:event_supplyBtnActionPerformed

    private void suppliernametxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suppliernametxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_suppliernametxtActionPerformed

    private void viewInventoryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewInventoryBtnActionPerformed
        // TODO add your handling code here:
        ViewMedicineInventoryPage view = new ViewMedicineInventoryPage(userProcessContainer, organization, enterprise, med);
        userProcessContainer.add("ViewProductDetailJPanelSupplier", view);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_viewInventoryBtnActionPerformed

    private void reqSupplyFromManufacturerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reqSupplyFromManufacturerBtnActionPerformed
        // TODO add your handling code here:
        RequestMedicineSupplyJPanel managemed = new RequestMedicineSupplyJPanel(userProcessContainer, organization, enterprise, med, system, userAccount);
        userProcessContainer.add("processWorkRequestJPanel", managemed);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_reqSupplyFromManufacturerBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignJButton;
    private javax.swing.JPanel container;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JButton reqSupplyFromManufacturerBtn;
    private javax.swing.JTextField suppliernametxt;
    private javax.swing.JButton supplyBtn;
    private javax.swing.JButton viewInventoryBtn;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
